export default class ChartMetadata {
  constructor(config) {
    const {
      name,
      canBeAnnotationTypes = [],
      credits = [],
      description = '',
      show = true,
      supportedAnnotationTypes = [],
      thumbnail,
      useLegacyApi = false,
      isNativeFilter = false
    } = config;
    this.name = name;
    this.credits = credits;
    this.description = description;
    this.show = show;
    this.canBeAnnotationTypes = canBeAnnotationTypes;
    this.canBeAnnotationTypesLookup = canBeAnnotationTypes.reduce((prev, type) => {
      const lookup = prev;
      lookup[type] = true;
      return lookup;
    }, {});
    this.supportedAnnotationTypes = supportedAnnotationTypes;
    this.thumbnail = thumbnail;
    this.useLegacyApi = useLegacyApi;
    this.isNativeFilter = isNativeFilter;
  }

  canBeAnnotationType(type) {
    return this.canBeAnnotationTypesLookup[type] || false;
  }

  clone() {
    return new ChartMetadata({
      canBeAnnotationTypes: this.canBeAnnotationTypes,
      credits: this.credits,
      description: this.description,
      name: this.name,
      show: this.show,
      supportedAnnotationTypes: this.supportedAnnotationTypes,
      thumbnail: this.thumbnail,
      useLegacyApi: this.useLegacyApi,
      isNativeFilter: this.isNativeFilter
    });
  }

}